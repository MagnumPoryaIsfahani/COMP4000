syntax = "proto3";

package users;
// The users service definition.
service Users {

  // This function will create a new user account for the user.
  rpc createUserAccount (CreateUserRequest) returns (CreateUserReply) {}
  
  // This function will allow a user to login to their account.
  rpc loginUserAccount (LoginUserRequest) returns (LoginUserReply) {}

  rpc deleteUserAccount (DeleteUserRequest) returns (DeleteUserReply) {}

  // This function will allow a user to update their password.
  rpc updateUserAccount (UpdateUserRequest) returns (UpdateUserReply) {}

  // filesystem methods
  rpc fsGetAttr (GetAttrRequest) returns (GetAttrReponse) {}
  rpc fsReadDir (ReadDirRequest) returns (ReadDirResponse) {}
  
  // file methods
  // rpc fileOpen () returns () {}
  // rpc fileRead () returns () {}
}

// Define a message describing a single user
message CreateUserRequest {
  string username = 1;
  string password = 2;
  string confirmation = 3;
}

message CreateUserReply {
  bool success = 1; 
}

// Define a message describing a single user
message LoginUserRequest {
  string username = 1;
  string password = 2;
}

// Define a message to log a user in
message LoginUserReply {
  bool success = 1; 
  string token = 2;
}

// Define a message to delete a user
message DeleteUserRequest {
  string token = 1;
  string username = 2;
}

message DeleteUserReply {
  bool success = 1;
}

// Define a message describing a single user
message UpdateUserRequest {
  string password = 1;
  string token = 2;
  string username = 3;
}

message UpdateUserReply {
  int32 code = 1;
}

message GetAttrRequest {
  string path = 1;
  string fh = 2;
}

message GetAttrReponse {
  string data = 1;
}

message ReadDirRequest {
  string path = 1;
}

message ReadDirResponse {
  string data = 1;
}