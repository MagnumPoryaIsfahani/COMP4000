syntax = "proto3";

package users;
// The users service definition.
service Users {

  // This function will create a new user account for the user.
  rpc createUserAccount (CreateUserRequest) returns (CreateUserReply) {}
  
  // This function will allow a user to login to their account.
  rpc loginUserAccount (LoginUserRequest) returns (LoginUserReply) {}

  rpc deleteUserAccount (DeleteUserRequest) returns (DeleteUserReply) {}

  // This function will allow a user to update their password.
  rpc updateUserAccount (UpdateUserRequest) returns (UpdateUserReply) {}

  // returns file structure
  rpc displayTree (DisplayTreeRequest) returns (DisplayTreeReply) {}

  // filesystem methods
  rpc fsAccess (AccessRequest) returns (JsonReply) {}
  rpc fsGetAttr (GetAttrRequest) returns (JsonReply) {}
  rpc fsReadDir (ReadDirRequest) returns (JsonReply) {}
  rpc fsMkDir (MkDirRequest) returns (JsonReply) {}
  rpc fsStat (StatRequest) returns (JsonReply) {}
  rpc fsUnlink (UnlinkRequest) returns (JsonReply) {}
  rpc fsUtimens (UltimensRequest) returns (JsonReply) {}
  
  // file methods
  rpc fileOpen (OpenRequest) returns (JsonReply) {}
  rpc fileCreate (CreateRequest) returns (JsonReply) {}
  rpc fileRead (ReadRequest) returns (ReadReply) {}
  rpc fileWrite (WriteRequest) returns (JsonReply) {}
  rpc fileFlush (FlushRequest) returns (JsonReply) {}
  rpc fileRelease (ReleaseRequest) returns (JsonReply) {}
}

// Define a message describing a single user
message CreateUserRequest {
  string username = 1;
  string password = 2;
  string confirmation = 3;
}

message CreateUserReply {
  bool success = 1; 
}

// Define a message describing a single user
message LoginUserRequest {
  string username = 1;
  string password = 2;
}

// Define a message to log a user in
message LoginUserReply {
  bool success = 1; 
  string token = 2;
}

// Define a message to delete a user
message DeleteUserRequest {
  string token = 1;
  string username = 2;
}

message DeleteUserReply {
  bool success = 1;
}

// Define a message describing a single user
message UpdateUserRequest {
  string password = 1;
  string token = 2;
  string username = 3;
}

message UpdateUserReply {
  int32 code = 1;
}

// Display file structure
message DisplayTreeRequest {
  string path = 1;
}

message DisplayTreeReply {
  string tree = 1;
}

// Generic JSON reply
message JsonReply {
  string data = 1;
  bool error = 2;
}

// Filesystem methods
message AccessRequest {
  string path = 1;
  int32 mode = 2;
}
message GetAttrRequest {
  string path = 1;
  int32 fh = 2;
}
message ReadDirRequest {
  string path = 1;
  int32 fh = 2;
}
message MkDirRequest {
  string path = 1;
  int32 mode = 2;
}
message StatRequest {
  string path = 1;
}
message UnlinkRequest {
  string path = 1;
}
message UltimensRequest {
  string path = 1;
}

// File methods
message OpenRequest {
  string path = 1;
  int32 flags = 2;
}
message CreateRequest {
  string path = 1;
  int32 mode = 2;
  string fi = 3;
}
message ReadRequest {
  string path = 1;
  int32 length = 2;
  int32 offset = 3;
  int32 fh = 4;
}
message ReadReply {
  bytes data = 1; // not using JsonReply cuz data needs to be bytes
}
message WriteRequest{
  string path = 1;
  bytes buf = 2;
  int32 offset = 3;
  int32 fh = 4;
}
message FlushRequest {
  string path = 1;
  int32 fh = 2;
}
message ReleaseRequest {
  string path = 1;
  int32 fh = 2;
}
