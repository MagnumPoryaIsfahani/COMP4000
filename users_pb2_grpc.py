# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import users_pb2 as users__pb2


class UsersStub(object):
    """The users service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createUserAccount = channel.unary_unary(
                '/users.Users/createUserAccount',
                request_serializer=users__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=users__pb2.CreateUserReply.FromString,
                )
        self.loginUserAccount = channel.unary_unary(
                '/users.Users/loginUserAccount',
                request_serializer=users__pb2.LoginUserRequest.SerializeToString,
                response_deserializer=users__pb2.LoginUserReply.FromString,
                )
        self.DeleteUserAccount = channel.unary_unary(
                '/users.Users/DeleteUserAccount',
                request_serializer=users__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=users__pb2.DeleteUserReply.FromString,
                )
        self.updateUserAccount = channel.unary_unary(
                '/users.Users/updateUserAccount',
                request_serializer=users__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=users__pb2.UpdateUserReply.FromString,
                )


class UsersServicer(object):
    """The users service definition.
    """

    def createUserAccount(self, request, context):
        """This function will create a new user account for the user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loginUserAccount(self, request, context):
        """This function will allow a user to login to their account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateUserAccount(self, request, context):
        """This function will allow a user to update their password.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createUserAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.createUserAccount,
                    request_deserializer=users__pb2.CreateUserRequest.FromString,
                    response_serializer=users__pb2.CreateUserReply.SerializeToString,
            ),
            'loginUserAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.loginUserAccount,
                    request_deserializer=users__pb2.LoginUserRequest.FromString,
                    response_serializer=users__pb2.LoginUserReply.SerializeToString,
            ),
            'DeleteUserAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserAccount,
                    request_deserializer=users__pb2.DeleteUserRequest.FromString,
                    response_serializer=users__pb2.DeleteUserReply.SerializeToString,
            ),
            'updateUserAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.updateUserAccount,
                    request_deserializer=users__pb2.UpdateUserRequest.FromString,
                    response_serializer=users__pb2.UpdateUserReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'users.Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """The users service definition.
    """

    @staticmethod
    def createUserAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.Users/createUserAccount',
            users__pb2.CreateUserRequest.SerializeToString,
            users__pb2.CreateUserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def loginUserAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.Users/loginUserAccount',
            users__pb2.LoginUserRequest.SerializeToString,
            users__pb2.LoginUserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.Users/DeleteUserAccount',
            users__pb2.DeleteUserRequest.SerializeToString,
            users__pb2.DeleteUserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateUserAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.Users/updateUserAccount',
            users__pb2.UpdateUserRequest.SerializeToString,
            users__pb2.UpdateUserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
